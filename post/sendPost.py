import os
import time
import smtplib
from email.mime.text import MIMEText
from telegram import ReplyKeyboardRemove
from email.mime.multipart import MIMEMultipart

from post.accesses import MAIL, PASSWORD


def read_json(username):
    from post.collect_data import JSONFile
    """ –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –≤ —Å–ª–æ–≤–∞—Ä—å
        –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è """

    logs = os.listdir('./post/logs/')

    for file in logs:
        if file.split('$')[0] == username:
            data = JSONFile(f'./post/logs/{file}', d_or_l='load')
            return data


def get_format_data(data):
    """ –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç–æ—Ä–æ–∫—É
        —Å–æ—Å—Ç–æ—è—â–∏—é –∏–∑ –∏–Ω–∏—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è """
    format_string = ''
    for m in data:
        format_string += f'{str(m)[1: -1]}<br>'
    return format_string


def plus_post_bun(post_ban_list, username):
    from post.collect_data import JSONFile
    post_ban_list.get(username)[0] += 1
    JSONFile(f'./post/logs/POST_BAN.json', post_ban_list)


def send_to_black_list(username, update, context):
    from post.collect_data import JSONFile
    user_ban_list = JSONFile('./post/BLACK_LIST.json', d_or_l='load')
    user_ban_list.update({username: time.strftime("%x-%X", time.localtime())})
    JSONFile(f'./post/BLACK_LIST.json', user_ban_list)
    send(username, update, context, 'black_list')


def send(username, update, context, message='new_user'):
    from post.collect_data import JSONFile
    from bot_logic import typing
    from bot_logic import send_sticker
    """ –§—É–Ω–∫—Ü–∏—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –Ω–∞ –ø–æ—á—Ç—É –ø—Ä–∏ N —Å–æ–±—ã—Ç–∏–∏ """
    post_ban_list = JSONFile('./post/logs/POST_BAN.json', d_or_l='load')
    if username not in post_ban_list.keys() \
            or post_ban_list[username][1].split('-')[0] != time.strftime("%x", time.localtime()) \
            or message == 'black_list':
        login = MAIL
        password = PASSWORD
        msg = MIMEMultipart('alternative')
        msg['From'] = login
        msg['To'] = login
        if message == 'new_user':
            msg['Subject'] = f'–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} üëç'
            body = f'–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞ @{username}'
        elif message == 'request' or 'brif_list':

            data = read_json(username)
            user_msg, user_actions = get_format_data(data['messages']), get_format_data(data['actions'])

            body = f'<b>–ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <em>@{username}</em></b>' \
                   f'<br><br>{user_msg}<br><br>' \
                   f'<b>–ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>' \
                   f'<br><br>{user_actions}<br><br>'
            if message == 'request':
                msg['Subject'] = f'üìÆ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å –±–æ—Ç–∞ –æ—Ç @{username}'
            elif message == 'brif_list':
                msg['Subject'] = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –∑–∞–ø–æ–ª–Ω–∏–ª –±—Ä–∏—Ñ üìú'
            elif message == 'black_list':
                msg['Subject'] = f'‚ö´Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –∑–∞–≥—Ä–µ–º–µ–ª –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ ‚ö´Ô∏è'

        msg.attach(MIMEText(body, 'html'))
        # –°–æ–∑–¥–∞—é –≤–∏–¥–∏–º–æ—Å—Ç—å –ø–µ—á–∞—Ç–∏ –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
        typing(update, context)

        server = smtplib.SMTP('smtp.gmail.com', 587)
        server.starttls()
        server.login(login, password)
        print("–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞...")

        server.send_message(msg)
        server.quit()

        if message != 'new_user' and message != 'black_list':
            post_ban_list.update({username: [1, time.strftime("%x-%X", time.localtime())]})
            JSONFile(f'./post/logs/POST_BAN.json', post_ban_list)

        print('\x1b[6;30;42m' + 'Email successfully sent' + '\x1b[0m')
        return '–û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ—á—Ç—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ ‚úÖ'
    elif post_ban_list.get(username)[0] == 1:
        print(f'–ü–æ–ø—ã—Ç–∫–∞ —Å–ø–∞–º–∞ {username}')
        plus_post_bun(post_ban_list, username)
        return '–¢—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∑–∞—è–≤–∫—É —Å–µ–≥–æ–¥–Ω—è'

    elif post_ban_list.get(username)[0] == 2:
        print(f'–ü–æ–ø—ã—Ç–∫–∞ —Å–ø–∞–º–∞ {username}')
        sti = open('static/stickers/yyyyy.webp', 'rb')
        send_sticker(update, context, sti)
        plus_post_bun(post_ban_list, username)
        return '–Ø –∂–µ —Å–∫–∞–∑–∞–ª, —á—Ç–æ —Ç—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª —Å–µ–≥–æ–¥–Ω—è –∑–∞—è–≤–∫—É ü§®\n' \
               '–ü–æ–≤—Ç–æ—Ä–Ω—É—é –∑–∞—è–≤–∫—É –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞'

    elif post_ban_list.get(username)[0] == 3:
        print(f'–ü–æ–ø—ã—Ç–∫–∞ —Å–ø–∞–º–∞ {username}')
        plus_post_bun(post_ban_list, username)
        return '–¢–∞–∫, –µ—â–µ —Ä–∞–∑ –∏ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ üòë'

    elif post_ban_list.get(username)[0] == 4:
        print(f'–ó–∞–Ω–µ—Å–µ–Ω–∏–µ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}')
        sti = open('static/stickers/FUUUUCK.webp', 'rb')
        send_sticker(update, context, sti)
        update.message.reply_text(
            text='–ß–ï–†–¢! –ú–ï–ù–Ø –î–í–ê–ñ–î–´ –ü–†–û–°–ò–¢–¨ –ù–ï –ù–£–ñ–ù–û!',
            reply_markup=ReplyKeyboardRemove(),
        )

        # –£–¥–∞–ª—è—é –∏–∑ —Å–ø–∏—Å–∫–∞ —Å—É—Ç–æ—á–Ω–æ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ –±–∞–Ω–∞
        post_ban_list.pop(username)
        JSONFile(f'./post/logs/POST_BAN.json', post_ban_list)

        # –°–æ–∑–¥–∞—é –≤–∏–¥–∏–º–æ—Å—Ç—å –ø–µ—á–∞—Ç–∏ –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
        typing(update, context)
        send_to_black_list(username, update, context)
        return '–Ø –æ–±–∏–¥–µ–ª—Å—è –Ω–∞ —Ç–µ–±—è –∏ –¥–æ–±–∞–≤–ª—è—é —Ç–µ–±—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ üò°'
