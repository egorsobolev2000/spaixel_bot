from telegram import Update
from telegram import ParseMode
from telegram import ChatAction
from telegram.ext import CallbackContext
from telegram import ReplyKeyboardRemove

from debug import log_error
from inline.data import INLINE_DATA
from modules.keyboard import keyboard_btn as kbb, keyboard_logic as kbl
from modules.home_menu.home_logic import get_main_inline_menu
from modules.home_menu.home_menu_btn import *
from modules.brif import brif_btn, brif_logic
from modules.faq import faq_btn as fb, faq_logic as fl
from modules.service import service_btn as sb, service_logic as sl
from post.collect_data import info_collector

brif_status_check = ['brif_status_OFF']


@log_error
def keyboard_btns_handler(update, context):
    """ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    –±–æ—Ç–∞ + —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ """


# --------------------------------------------------------------
# üëá –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é –≥–ª–∞–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üëá
# --------------------------------------------------------------

    # –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
    if update.message.text == kbb.GET_MAIN_BOT_MENU:
        get_main_inline_menu(update)

    # –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ —Ö–æ—á–µ—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
    elif update.message.text == kbb.MANAGER_MESSAGE:
        update.message.reply_text(
            text='@sobolev_eg',
            parse_mode=ParseMode.HTML,
        )

    # –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    elif update.message.text == kbb.CONTACT_LEFT:
        update.message.reply_text(
            text=INLINE_DATA.get('–ö–æ–Ω—Ç–∞–∫—Ç—ã'),
            parse_mode=ParseMode.HTML,
        )


# --------------------------------------------------------------
# üëá –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±—Ä–∏—Ñ–∞ üëá
# --------------------------------------------------------------

    # –í–û–ü–†–û–° ‚Ññ2
    elif update.message.text == brif_btn.Q_2:
        update.message.reply_text(
            text='<b>–í—ã–±–µ—Ä–∏ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª '
                 '–Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —Ç–≤–æ–µ–≥–æ —Å–∞–π—Ç–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç. </b>',
            reply_markup=brif_logic.get_brif_list_inline_keyboard(),
            parse_mode=ParseMode.HTML,
        )

        update.message.reply_text(
            text='–ò–ª–∏ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å –µ–≥–æ –º–Ω–µ.',
            reply_markup=brif_logic.create_brif_list_keyboard('next', brif_btn.Q_3),
            parse_mode=ParseMode.HTML,
        )

    # –í–û–ü–†–û–° ‚Ññ3
    elif update.message.text == brif_btn.Q_3:
        update.message.reply_text(
            text='<b>–ü—Ä–∏–≤–µ–¥–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–∏–º–µ—Ä—ã –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è —Å–∞–π—Ç–æ–≤, '
                 '–µ—Å–ª–∏ —Ç–∞–∫–∏—Ö –µ—Å—Ç—å. </b>',
            reply_markup=brif_logic.create_brif_list_keyboard('next', brif_btn.Q_4),
            parse_mode=ParseMode.HTML,
        )

    # –í–û–ü–†–û–° ‚Ññ4
    elif update.message.text == brif_btn.Q_4:
        update.message.reply_text(
            text='<b> –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∏—Ä–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å?</b>',
            reply_markup=brif_logic.create_brif_list_keyboard('next', brif_btn.Q_5),
            parse_mode=ParseMode.HTML,
        )

    # –í–û–ü–†–û–° ‚Ññ5
    elif update.message.text == brif_btn.Q_5:
        update.message.reply_text(
            text='<b>–ñ–µ–ª–∞–µ–º—ã–π –±—é–¥–∂–µ—Ç –ø—Ä–æ–µ–∫—Ç–∞?</b>',
            reply_markup=brif_logic.create_brif_list_keyboard('next', brif_btn.LAST_Q_6),
            parse_mode=ParseMode.HTML,
        )

    # –í–û–ü–†–û–° ‚Ññ6
    elif update.message.text == brif_btn.LAST_Q_6:
        update.message.reply_text(
            text='<b>–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ª–æ–≥–æ—Ç–∏–ø–∞?</b>',
            reply_markup=brif_logic.create_brif_list_keyboard('finish'),
            parse_mode=ParseMode.HTML,
        )

    # –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±—Ä–∏—Ñ–∞
    elif update.message.text == brif_btn.ABORT_FILLING:
        sti = open('static/stickers/wtf.tgs', 'rb')
        # –°–æ–∑–¥–∞—é –≤–∏–¥–∏–º–æ—Å—Ç—å –ø–µ—á–∞—Ç–∏ –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
        context.bot.send_chat_action(
            chat_id=update.effective_message.chat_id,
            action=ChatAction.TYPING
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞
        context.bot.send_sticker(
            chat_id=update.effective_message.chat_id,
            sticker=sti
        )
        update.message.reply_text(
            text='–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±—Ä–∏—Ñ–∞ –ø—Ä–µ—Ä–≤–∞–Ω–æ...\n\n'
                 '–ù–æ —è –Ω–µ–º–Ω–æ–≥–æ —Ä–∞—Å—Å—Ç—Ä–æ–∏–ª—Å—è üòû\n',
            reply_markup=kbl.get_base_keyboard_btns(),
            parse_mode=ParseMode.HTML,
        )
        get_main_inline_menu(update)

    # –ü–æ–ª–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±—Ä–∏—Ñ–∞
    elif update.message.text == brif_btn.FINISH:
        # –í—ã–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±—Ä–∏—Ñ–∞
        brif_status_check[0] = 'brif_status_OFF'

        sti = open('static/stickers/not_bad.tgs', 'rb')
        # –°–æ–∑–¥–∞—é –≤–∏–¥–∏–º–æ—Å—Ç—å –ø–µ—á–∞—Ç–∏ –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
        context.bot.send_chat_action(
            chat_id=update.effective_message.chat_id,
            action=ChatAction.TYPING
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞
        context.bot.send_sticker(
            chat_id=update.effective_message.chat_id,
            sticker=sti
        )
        update.message.reply_text(
            text='–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –ë—Ä–∏—Ñ-–ª–∏—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω!',
            reply_markup=kbl.get_base_keyboard_btns(),
            parse_mode=ParseMode.HTML,
        )
        get_main_inline_menu(update)


# --------------------------------------------------------------
# üëá –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π üëá
# --------------------------------------------------------------

    # –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ —Ö–æ—á–µ—Ç –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    elif update.message.text == kbb.BACK:
        update.message.reply_text(
            text="–í–æ–∑–≤—Ä–∞—Ç –≤ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b> ",
            reply_markup=kbl.get_base_keyboard_btns(),
            parse_mode=ParseMode.HTML,
        )

        # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        get_main_inline_menu(update)

    else:
        if brif_status_check[0] == 'brif_status_ON':
            pass
        else:
            update.message.reply_text(
                text='–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ... ‚òπÔ∏è\n\n'
                     '–ü–æ–ø—Ä–æ–±—É–π –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è'
                     '–ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ —Å <b>–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã</b> –∏–ª–∏ '
                     '—Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏–∑ <b>–≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é</b>',
                parse_mode=ParseMode.HTML,
            )


@log_error
def main_callback_handler(update: Update, context: CallbackContext):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –í–°–ï–• –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –ë–†–ò–§–ê """

    query = update.callback_query
    data = query.data
    username = query.message.chat
    info_collector(username, 'a', data)

# --------------------------------------------------------------
# üëá –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ë–†–ò–§–û–ú üëá
# --------------------------------------------------------------

    if data == CB_B_BRIF_LIST:
        # –í–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±—Ä–∏—Ñ–∞
        brif_status_check[0] = 'brif_status_ON'

        context.bot.delete_message(
            chat_id=update.callback_query.message.chat_id,
            message_id=update.callback_query.message.message_id,
        )

        context.bot.send_message(
            text='<em>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥. –≤–æ–ø—Ä–æ—Å—É '
                 '–∏–ª–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.</em>',
            chat_id=update.callback_query.message.chat_id,
            message_id=update.callback_query.message.message_id,
            reply_markup=ReplyKeyboardRemove(),
            parse_mode=ParseMode.HTML,
        )

        context.bot.send_message(
            text='<b>–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–∞–π—Ç–∞: –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã, '
                 '–ø–æ–¥—Ä–∞–∑–¥–µ–ª—ã. –ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –∏—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏ '
                 '–¥–∞–π—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –∏–∑ —Ä–∞–∑–¥–µ–ª–æ–≤.</b>',
            chat_id=update.callback_query.message.chat_id,
            message_id=update.callback_query.message.message_id,
            reply_markup=brif_logic.create_brif_list_keyboard('next', brif_btn.Q_2),
            parse_mode=ParseMode.HTML,
        )


# --------------------------------------------------------------
# üëá –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ä–∞–∑–¥–µ–ª–æ–º –£–°–õ–£–ì–ò üëá
# --------------------------------------------------------------

    elif data == CB_B_SERVICES:
        query.edit_message_text(
            text='–ü–æ–¥–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è —Ç–µ–±—è –Ω–∞—à —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ üòé',
            inline_message_id=update.callback_query.inline_message_id,
            reply_markup=sl.get_service_inline_keyboard(),
        )
        context.bot.send_message(
            text='–ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ —Å —É—Å–ª—É–≥–∞–º–∏ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –Ω–∞ –Ω–∞—à–µ–º <a href="https://spaixel.com">—Å–∞–π—Ç–µ</a>',
            chat_id=update.callback_query.message.chat_id,
            message_id=update.callback_query.message.message_id,
            reply_markup=kbl.get_back_keyboard(),
            parse_mode=ParseMode.HTML,
        )

    elif data == sb.CB_B_SITE_DEVELOPMENT \
            or data == sb.CB_B_BOT_DEVELOPMENT \
            or data == sb.CB_B_DESIGN_DEVELOPMENT \
            or data == sb.CB_B_LOGO_DEVELOPMENT \
            or data == sb.CB_B_DESIGN_VK_GROUPS \
            or data == sb.CB_B_MARKETING:

        context.bot.send_message(
            text=sb.SERVICE_INFO[sb.FIST_EX],
            chat_id=update.callback_query.message.chat_id,
        )

# --------------------------------------------------------------
# üëá –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ä–∞–∑–¥–µ–ª–æ–º FAQ üëá
# --------------------------------------------------------------

    # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ä–∞–∑–¥–µ–ª–∞ FAQ
    elif data == CB_B_FAQ:
        query.edit_message_text(
            text='–≠—Ç–æ –≤–æ–ø—Ä–æ—Å—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–º –∑–∞–¥–∞—é—Ç —á–∞—â–µ –≤—Å–µ–≥–æ üëÄ',
            inline_message_id=update.callback_query.inline_message_id,
            reply_markup=fl.get_faq_inline_keyboard(),
        )
        context.bot.send_message(
            text='<em> –ï—Å–ª–∏ —Ç—ã –Ω–µ –Ω–∞–π–¥–µ—à—å –∑–¥–µ—Å—å –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å,'
                 '—Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É –∏–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É'
                 '–≤ –º–æ–µ–º –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é </em>',
            chat_id=update.callback_query.message.chat_id,
            message_id=update.callback_query.message.message_id,
            reply_markup=kbl.get_back_keyboard(),
            parse_mode=ParseMode.HTML,
        )

    # FAQ ‚Ññ1
    elif data == fb.C_B_FAQ_Q1:
        context.bot.send_message(
            text=fb.FAQ[fb.C_B_FAQ_Q1][1],
            chat_id=update.callback_query.message.chat_id,
            reply_markup=fl.get_faq_inline_keyboard(),
            parse_mode=ParseMode.HTML,
        )

    # FAQ ‚Ññ2
    elif data == fb.C_B_FAQ_Q2:
        context.bot.send_message(
            text=fb.FAQ[fb.C_B_FAQ_Q2][1],
            chat_id=update.callback_query.message.chat_id,
            reply_markup=fl.get_faq_inline_keyboard(),
            parse_mode=ParseMode.HTML,
        )

    # FAQ ‚Ññ3
    elif data == fb.C_B_FAQ_Q3:
        context.bot.send_message(
            text=fb.FAQ[fb.C_B_FAQ_Q3][1],
            chat_id=update.callback_query.message.chat_id,
            reply_markup=fl.get_faq_inline_keyboard(),
            parse_mode=ParseMode.HTML,
        )

    # FAQ ‚Ññ4
    elif data == fb.C_B_FAQ_Q4:
        context.bot.send_message(
            text=fb.FAQ[fb.C_B_FAQ_Q4][1],
            chat_id=update.callback_query.message.chat_id,
            reply_markup=fl.get_faq_inline_keyboard(),
            parse_mode=ParseMode.HTML,
        )