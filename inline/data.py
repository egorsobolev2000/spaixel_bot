import re
from contextlib import contextmanager


INLINE_DATA = {

    '–û—Ç–∑—ã–≤—ã': '–ù–∞—à–∏ <a href="https://vk.com/topic-157919190_41216100">'
              '<em><b>–û—Ç–∑—ã–≤—ã</b></em></a> üëá',

    '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ': '–° –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è '
                 '–∑–¥–µ—Å—å -> <a href="https://spaixel.com/portfolio">'
                 '<em><b>–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ</b></em></a>',

    '–°—Ç–æ–∏–º–æ—Å—Ç—å': "–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å–∞–π—Ç–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã—Ö —Å—Ä–æ–∫–æ–≤, "
                 "—É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–∏–∑–∞–π–Ω–∞ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞. "
                 "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞ —Å–∞–π—Ç 7000‚ÇΩ –∏ –≤—ã—à–µ.",

    '–°—Ä–æ–∫–∏': "–°—Ä–æ–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±—É–¥—É—Ç –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç —Ç—Ä–µ–±—É–µ–º–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞, "
             "—Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –¥–∏–∑–∞–π–Ω–∞ –∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. "
             "–í —Å—Ä–µ–¥–Ω–µ–º, —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –æ—Ç 5 –¥–Ω–µ–π.",

    '–ï—Å—Ç—å –¥–∏–∑–∞–π–Ω?': "–î–∞, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ –í—ã –∏–º–µ–µ—Ç–µ –≤—Å–µ –∏—Å—Ö–æ–¥–Ω–∏–∫–∏ –º–∞–∫–µ—Ç–∞ "
              "(<em><b>–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û</b></em> –ª–∏–±–æ –≤ Figma –ª–∏–±–æ –≤ PSD), —Ç–∞–∫ –∂–µ –¥–∏–∑–∞–π–Ω –¥–æ–ª–∂–µ–Ω "
              "—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æhon–≤–∞—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Ç–µ–Ω–¥–µ–Ω—Ü–∏—è–º –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏ –≤–µ—Ä–µ–Ω. "
              "–í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –º—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é —Ä–µ–∞–ª–∏–∑—É–µ–º –í–∞—à –¥–∏–∑–∞–π–Ω!",

    '–ü—Ä–∞–≤–∫–∏': "–ë–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –≤–Ω–µ—Å–µ–Ω—ã 5-10 –∏–∑–º–µ–Ω–µ–Ω–∏–π "
              "–∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —á–∞—Å—Ç—å –∏ –Ω–µ —Ç—Ä–µ–±—É—é—Ç –±–æ–ª–µ–µ "
              "3 —á–∞—Å–æ–≤ –Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –æ–¥–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∞ —Ç–∞–∫ –∂–µ —Ç–æ–ª—å–∫–æ —Ç–æ —á—Ç–æ "
              "–±—ã–ª–æ –æ–≥–æ–≤–æ—Ä–µ–Ω–æ –≤ —Ä–∞–º–∫–∞—Ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.",

    '–ö–æ–Ω—Ç–∞–∫—Ç—ã': '<em><b>–ö–æ–Ω—Ç–∞–∫—Ç—ã</b></em>\n'
                'üìû <b>WhatsApp</b> ‚Äî <em>+7 938 538 69 30</em>\n'
                'üìß <b>E-mail</b> ‚Äî <em>spaixel.info@gmail.com</em>\n'
                '–ü–µ—Ä–µ–π—Ç–∏ –≤ <a href="https://vk.com/spaixel"><em>–ì—Ä—É–ø–ø—É –í–ö</em></a>\n'
                '–ù–∞—à–∏ <a href="https://vk.com/topic-157919190_41216100">'
                '<em>–û—Ç–∑—ã–≤—ã</em></a>\n',
}


@contextmanager
def managed_file(name):
    try:
        f = open(name, 'r')
        yield f

    finally:
        f.close()


def clear_text_func(text):
    text_to_terms = {}

    # –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ —Å—Ç–æ–ø-—Å–ª–æ–≤
    stopwords = STOP_LIST

    for w in text:
        word_re = re.compile(r'[\W_]+')
        symbols_re = re.compile(r'[<.*?>]|[</a-z>]|\d+|[#%!@*\"\':;=+\-()*?%$#@!]')
        text_to_terms[text] = text.lower()
        text_to_terms[text] = word_re.sub(' ', text_to_terms[text])
        text_to_terms[text] = symbols_re.sub('', text_to_terms[text])
        re.sub(r'[\W_]+', '', text_to_terms[text])
        text_to_terms[text] = text_to_terms[text].split()

        text_to_terms[text] = [w for w in text_to_terms[text] if w not in stopwords]

    return text_to_terms


def index_one_file(termlist):
    file_index = {}
    for index, word in enumerate(termlist):
        if word in file_index.keys():
            file_index[word].append(index)
        else:
            file_index[word] = [index]
    return file_index


def make_indices(termlists):
    total = {}
    for filename in termlists.keys():
        total[filename] = index_one_file(termlists[filename])
    return total


def create_new_dict(old_dict):
    NEW_INLINE_DATA = {}
    # –ü—Ä–æ–≥–æ–Ω—è—é –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ —Ü–∏–∫–ª —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
    for k, v in old_dict.items():
        """ 1. –ë–µ—Ä—É k-–∫–ª—é—á –∏ v-–∑–Ω–∞—á–µ–Ω–∏–µ
            2. –ó–∞–ø–∏—Å—É—é –≤ –Ω–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å: {
                k-—Å—Ç–∞—Ä—ã–π –∫–ª—é—á: 
                (–≤—ã–∑—ã–≤–∞—é —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞–∑–±–∏–µ–Ω–∏—è –∏ –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
                (–ø–µ—Ä–µ–¥–∞—é[—Å—Ç–∞—Ä—ã–π —Å–ª–æ–≤–∞—Ç—å][—Ç–µ–∫—É—â–∏–π –∫–ª—é—á]))[–∑–∞–ø—Ä–∞—à–∏–≤–∞—é –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è]
                }
                """
        NEW_INLINE_DATA.update({k: (clear_text_func(old_dict[k]))[v]})
    return NEW_INLINE_DATA


def get_potential_options(di, regex):
    potential_options = []
    for k in list(di):
        for v in di[k]:
            if re.findall(regex.lower(), v) and k not in potential_options:
                potential_options.append(k)
                print(f'KEY -- {k}')
                print(f'VALUE -- {v}')
    return potential_options


#cnd = create_new_dict(INLINE_DATA)
#NEW_DICT = make_indices(cnd)
#t = get_potential_options(NEW_DICT, '–æ—Ç')
#for _ in t:
#    print(_)















